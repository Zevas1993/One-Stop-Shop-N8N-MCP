{"jsonrpc":"2.0","result":{"tools":[{"name":"get_workflow_guide","description":"Get workflow building guidance for specific scenarios. Returns patterns and configurations.","inputSchema":{"type":"object","properties":{"scenario":{"type":"string","enum":["webhook_to_api","ai_agent_tools","data_processing","notification_system","database_operations","file_handling"],"description":"Specific workflow scenario. Returns exact node configurations and connection patterns."}}}},{"name":"get_node_info","description":"Get node configuration data. essentials=~5KB, complete=~50KB, ai_tool=~10KB. Format: \"nodes-base.slack\".","inputSchema":{"type":"object","properties":{"nodeType":{"type":"string","description":"Full node type. Examples: \"nodes-base.slack\", \"nodes-base.httpRequest\", \"nodes-langchain.openAi\". Use exact values from list_nodes."},"detail":{"type":"string","enum":["essentials","complete","ai_tool"],"description":"essentials=required+common properties (~5KB, fast). complete=full schema (~50KB, thorough). ai_tool=AI connection guidance (~10KB).","default":"essentials"}},"required":["nodeType"]}},{"name":"find_nodes","description":"Find n8n nodes by search term or category. Returns nodeType, name, description.","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"Search term. Examples: \"slack\", \"email\", \"http\". Searches names and descriptions."},"category":{"type":"string","enum":["trigger","transform","output","input","AI","ai_tools"],"description":"Node category. trigger=workflow starters, AI=LangChain nodes, ai_tools=optimized for AI agents."},"limit":{"type":"number","description":"Results limit. Default 50.","default":50}}}},{"name":"get_node_summary","description":"Get ultra-light node overview - description + key properties only (<1KB response). Fast discovery tool for AI agents.","inputSchema":{"type":"object","properties":{"nodeType":{"type":"string","description":"Full node type. Examples: \"nodes-base.slack\", \"nodes-base.httpRequest\". Use exact values from find_nodes."}},"required":["nodeType"]}},{"name":"check_compatibility","description":"Quick yes/no check if two nodes can connect. Returns connection compatibility without full schemas.","inputSchema":{"type":"object","properties":{"sourceNode":{"type":"string","description":"Source node type (e.g., \"nodes-base.webhook\")"},"targetNode":{"type":"string","description":"Target node type (e.g., \"nodes-base.slack\")"}},"required":["sourceNode","targetNode"]}},{"name":"validate_before_adding","description":"Quick pre-flight check if node will work in workflow context. Prevents common placement errors.","inputSchema":{"type":"object","properties":{"nodeType":{"type":"string","description":"Node type to validate for placement"},"workflowContext":{"type":"object","properties":{"existingNodes":{"type":"array","items":{"type":"string"},"description":"Array of existing node types in workflow"},"targetPosition":{"type":"string","enum":["start","middle","end"],"description":"Where in workflow this node will be placed"}},"required":["existingNodes","targetPosition"]}},"required":["nodeType","workflowContext"]}},{"name":"get_database_statistics","description":"Get n8n ecosystem stats and server metrics. Returns node counts and performance data.","inputSchema":{"type":"object","properties":{"includePerformance":{"type":"boolean","description":"Include cache hit rates and response time metrics. Default true.","default":true}}}},{"name":"get_node_config","description":"Get node configuration help: pre-configured settings, property search, or dependencies.","inputSchema":{"type":"object","properties":{"nodeType":{"type":"string","description":"Full node type. Required for property search and dependencies."},"mode":{"type":"string","enum":["task","search_properties","dependencies","list_tasks"],"description":"task=get pre-configured settings, search_properties=find specific properties, dependencies=analyze property relationships, list_tasks=see available tasks.","default":"task"},"task":{"type":"string","description":"Task name for mode=task. Examples: post_json_request, receive_webhook, send_slack_message."},"query":{"type":"string","description":"Property search term for mode=search_properties. Examples: \"auth\", \"header\", \"body\"."},"config":{"type":"object","description":"Current configuration for mode=dependencies. Analyzes visibility impact."}}}},{"name":"validate_node","description":"Validate node configuration. Returns errors, warnings, and fix suggestions.","inputSchema":{"type":"object","properties":{"nodeType":{"type":"string","description":"Node type to validate. Example: \"nodes-base.slack\"."},"config":{"type":"object","description":"Node configuration to validate."},"mode":{"type":"string","enum":["minimal","full"],"description":"minimal=required fields only (fast), full=complete validation (thorough).","default":"full"}},"required":["nodeType","config"]}},{"name":"find_templates","description":"Search workflow templates from n8n.io. Modes: nodes (by node type), keywords (text search), task (curated), all (browse). Size options: summary or detailed responses.","inputSchema":{"type":"object","properties":{"mode":{"type":"string","enum":["nodes","keywords","task","all"],"description":"Search mode. Default \"keywords\" for general search.","default":"keywords"},"nodeTypes":{"type":"array","items":{"type":"string"},"description":"Array of node types to search for (mode: \"nodes\" only). Use full names like \"n8n-nodes-base.httpRequest\"."},"query":{"type":"string","description":"Search query for template names/descriptions (mode: \"keywords\" only). Examples: \"chatbot\", \"automation\", \"social media\"."},"task":{"type":"string","enum":["ai_automation","data_sync","webhook_processing","email_automation","slack_integration","data_transformation","file_processing","scheduling","api_integration","database_operations"],"description":"Task category (mode: \"task\" only). Predefined categories for common automation tasks."},"limit":{"type":"number","description":"Maximum number of templates to return. Default 20.","default":20},"detail":{"type":"string","enum":["summary","detailed"],"description":"Response detail level. summary=name+description only (<2KB), detailed=full template info.","default":"summary"}},"required":[]}},{"name":"get_template","description":"Get workflow template JSON by ID. Returns complete workflow definition for import.","inputSchema":{"type":"object","properties":{"templateId":{"type":"number","description":"The template ID to retrieve"}},"required":["templateId"]}},{"name":"validate_workflow","description":"Validate n8n workflows. Modes: full, structure, connections, expressions, nodes, remote. Returns errors and suggestions.","inputSchema":{"type":"object","properties":{"workflow":{"type":"object","description":"The complete workflow JSON to validate. Must include nodes array and connections object. Not needed for remote mode."},"workflowId":{"type":"string","description":"Workflow ID to validate from n8n instance (only for remote mode). Requires N8N_API_URL and N8N_API_KEY."},"mode":{"type":"string","enum":["quick","full","structure","connections","expressions","nodes","remote"],"description":"Validation mode. quick=basic checks only (<2KB response), full=complete validation. Other modes focus on specific areas.","default":"full"},"options":{"type":"object","properties":{"validateNodes":{"type":"boolean","description":"Validate individual node configurations. Default true for full mode.","default":true},"validateConnections":{"type":"boolean","description":"Validate node connections and flow. Default true for full mode.","default":true},"validateExpressions":{"type":"boolean","description":"Validate n8n expressions syntax and references. Default true for full mode.","default":true},"profile":{"type":"string","enum":["minimal","runtime","ai-friendly","strict"],"description":"Validation profile for node validation. Default \"runtime\".","default":"runtime"}},"description":"Optional validation settings. Mode automatically sets appropriate defaults."}},"required":[]}},{"name":"list_nodes","description":"List all available n8n nodes with filtering options. Returns nodeType, name, description.","inputSchema":{"type":"object","properties":{"category":{"type":"string","enum":["trigger","transform","output","input","AI","ai_tools"],"description":"Node category filter. trigger=workflow starters, AI=LangChain nodes, ai_tools=optimized for AI agents."},"package":{"type":"string","description":"Package filter. Examples: \"n8n-nodes-base\", \"@n8n/n8n-nodes-langchain\"."},"limit":{"type":"number","description":"Results limit. Default 100.","default":100}}}},{"name":"search_nodes","description":"Full-text search across all node documentation. More powerful than find_nodes.","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"Search query. Searches names, descriptions, and documentation."},"limit":{"type":"number","description":"Results limit. Default 50.","default":50}},"required":["query"]}},{"name":"get_node_essentials","description":"Get only essential properties (10-20) with examples. 95% smaller than complete. Fast discovery tool.","inputSchema":{"type":"object","properties":{"nodeType":{"type":"string","description":"Full node type. Examples: \"nodes-base.slack\", \"nodes-base.httpRequest\"."}},"required":["nodeType"]}},{"name":"search_node_properties","description":"Search for specific properties within a node without downloading everything.","inputSchema":{"type":"object","properties":{"nodeType":{"type":"string","description":"Full node type to search within."},"query":{"type":"string","description":"Property search term. Examples: \"auth\", \"header\", \"body\"."}},"required":["nodeType","query"]}},{"name":"get_node_as_tool_info","description":"Get specific information about using ANY node as an AI tool. Connection guidance.","inputSchema":{"type":"object","properties":{"nodeType":{"type":"string","description":"Full node type to get AI tool information for."}},"required":["nodeType"]}},{"name":"get_node_for_task","description":"Get pre-configured node settings for common tasks.","inputSchema":{"type":"object","properties":{"task":{"type":"string","description":"Task name. Examples: \"post_json_request\", \"receive_webhook\", \"send_slack_message\"."}},"required":["task"]}},{"name":"list_tasks","description":"List all available task templates.","inputSchema":{"type":"object","properties":{}}},{"name":"validate_node_operation","description":"Verify node configuration with operation awareness and profiles.","inputSchema":{"type":"object","properties":{"nodeType":{"type":"string","description":"Node type to validate."},"config":{"type":"object","description":"Node configuration to validate."},"operation":{"type":"string","description":"Specific operation being performed."},"profile":{"type":"string","enum":["minimal","runtime","ai-friendly","strict"],"description":"Validation profile. Default \"runtime\".","default":"runtime"}},"required":["nodeType","config"]}},{"name":"validate_node_minimal","description":"Quick validation for just required fields.","inputSchema":{"type":"object","properties":{"nodeType":{"type":"string","description":"Node type to validate."},"config":{"type":"object","description":"Node configuration to validate."}},"required":["nodeType","config"]}},{"name":"validate_workflow_connections","description":"Check workflow structure and connections.","inputSchema":{"type":"object","properties":{"workflow":{"type":"object","description":"Complete workflow JSON to validate connections."}},"required":["workflow"]}},{"name":"validate_workflow_expressions","description":"Validate all n8n expressions in a workflow.","inputSchema":{"type":"object","properties":{"workflow":{"type":"object","description":"Complete workflow JSON to validate expressions."}},"required":["workflow"]}},{"name":"get_property_dependencies","description":"Analyze property dependencies and visibility conditions.","inputSchema":{"type":"object","properties":{"nodeType":{"type":"string","description":"Node type to analyze."},"config":{"type":"object","description":"Current configuration for dependency analysis."}},"required":["nodeType"]}},{"name":"list_ai_tools","description":"List all AI-capable nodes with usage guidance.","inputSchema":{"type":"object","properties":{"limit":{"type":"number","description":"Results limit. Default 50.","default":50}}}},{"name":"get_node_documentation","description":"Get parsed documentation from n8n-docs.","inputSchema":{"type":"object","properties":{"nodeType":{"type":"string","description":"Node type to get documentation for."}},"required":["nodeType"]}},{"name":"list_node_templates","description":"Find workflow templates using specific nodes.","inputSchema":{"type":"object","properties":{"nodeTypes":{"type":"array","items":{"type":"string"},"description":"Array of node types to search for in templates."},"limit":{"type":"number","description":"Results limit. Default 20.","default":20}},"required":["nodeTypes"]}},{"name":"search_templates","description":"Search templates by keywords.","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"Search query for template names/descriptions."},"limit":{"type":"number","description":"Results limit. Default 20.","default":20}},"required":["query"]}},{"name":"get_templates_for_task","description":"Get curated templates for common tasks.","inputSchema":{"type":"object","properties":{"task":{"type":"string","enum":["ai_automation","data_sync","webhook_processing","email_automation","slack_integration","data_transformation","file_processing","scheduling","api_integration","database_operations"],"description":"Task category for templates."},"limit":{"type":"number","description":"Results limit. Default 20.","default":20}},"required":["task"]}},{"name":"n8n_create_workflow","description":"Create a new workflow in n8n. Requires workflow name, nodes array, and connections object. The workflow will be created in inactive state and must be manually activated in the UI. Returns the created workflow with its ID.","inputSchema":{"type":"object","properties":{"name":{"type":"string","description":"Workflow name (required)"},"nodes":{"type":"array","description":"Array of workflow nodes. Each node must have: id, name, type, typeVersion, position, and parameters","items":{"type":"object","required":["id","name","type","typeVersion","position","parameters"],"properties":{"id":{"type":"string"},"name":{"type":"string"},"type":{"type":"string"},"typeVersion":{"type":"number"},"position":{"type":"array","items":{"type":"number"},"minItems":2,"maxItems":2},"parameters":{"type":"object"},"credentials":{"type":"object"},"disabled":{"type":"boolean"},"notes":{"type":"string"},"continueOnFail":{"type":"boolean"},"retryOnFail":{"type":"boolean"},"maxTries":{"type":"number"},"waitBetweenTries":{"type":"number"}}}},"connections":{"type":"object","description":"Workflow connections object. Keys are source node IDs, values define output connections"},"settings":{"type":"object","description":"Optional workflow settings (execution order, timezone, error handling)","properties":{"executionOrder":{"type":"string","enum":["v0","v1"]},"timezone":{"type":"string"},"saveDataErrorExecution":{"type":"string","enum":["all","none"]},"saveDataSuccessExecution":{"type":"string","enum":["all","none"]},"saveManualExecutions":{"type":"boolean"},"saveExecutionProgress":{"type":"boolean"},"executionTimeout":{"type":"number"},"errorWorkflow":{"type":"string"}}}},"required":["name","nodes","connections"]}},{"name":"n8n_get_workflow","description":"Unified workflow retrieval tool with multiple detail levels. Get workflows from n8n instance by ID with different amounts of information based on your needs.\n\nDETAIL LEVELS:\n• complete (default) - Full workflow with nodes, connections, settings, and metadata\n• details - Workflow with metadata, version, and execution statistics\n• structure - Simplified view with only nodes and connections (no parameters)\n• minimal - Basic info only (ID, name, active status, tags) - fastest option\n\nUSAGE EXAMPLES:\n• get_workflow({id: \"123\"}) - Complete workflow (same as detail: \"complete\")\n• get_workflow({id: \"123\", detail: \"structure\"}) - Just nodes and connections\n• get_workflow({id: \"123\", detail: \"minimal\"}) - Just name, status, tags\n• get_workflow({id: \"123\", detail: \"details\"}) - With execution stats\n\nPERFORMANCE:\n• minimal - Fastest, smallest response\n• structure - Good for understanding workflow flow\n• details - Includes execution statistics \n• complete - Full data, largest response\n\nAll modes require N8N_API_URL and N8N_API_KEY to be configured.","inputSchema":{"type":"object","properties":{"id":{"type":"string","description":"Workflow ID"},"detail":{"type":"string","enum":["complete","details","structure","minimal"],"description":"Detail level for the response. Default \"complete\" returns full workflow.","default":"complete"}},"required":["id"]}},{"name":"n8n_update_full_workflow","description":"Update an existing workflow with complete replacement. Requires the full nodes array and connections object when modifying workflow structure. Use n8n_update_partial_workflow for incremental changes. Cannot activate workflows via API - use UI instead.","inputSchema":{"type":"object","properties":{"id":{"type":"string","description":"Workflow ID to update"},"name":{"type":"string","description":"New workflow name"},"nodes":{"type":"array","description":"Complete array of workflow nodes (required if modifying workflow structure)"},"connections":{"type":"object","description":"Complete connections object (required if modifying workflow structure)"},"settings":{"type":"object","description":"Workflow settings to update"}},"required":["id"]}},{"name":"n8n_update_partial_workflow","description":"Update a workflow using diff operations for precise, incremental changes. More efficient than n8n_update_full_workflow for small modifications. Supports adding/removing/updating nodes and connections without sending the entire workflow.\n\nPARAMETERS:\n• id (required) - Workflow ID to update\n• operations (required) - Array of operations to apply (max 5)\n• validateOnly (optional) - Test operations without applying (default: false)\n\nTRANSACTIONAL UPDATES (v2.7.0+):\n• Maximum 5 operations per request for reliability\n• Two-pass processing: nodes first, then connections/metadata\n• Add nodes and connect them in the same request\n• Operations can be in any order - engine handles dependencies\n\nIMPORTANT NOTES:\n• Operations are atomic - all succeed or all fail\n• Use validateOnly: true to test before applying\n• Node references use NAME, not ID (except in node definition)\n• updateNode with nested paths: use dot notation like \"parameters.values[0]\"\n• All nodes require: id, name, type, typeVersion, position, parameters\n\nOPERATION TYPES:\n\naddNode - Add a new node\n  Required: node object with id, name, type, typeVersion, position, parameters\n  Example: {\n    type: \"addNode\",\n    node: {\n      id: \"unique_id\",\n      name: \"HTTP Request\",\n      type: \"n8n-nodes-base.httpRequest\",\n      typeVersion: 4.2,\n      position: [400, 300],\n      parameters: { url: \"https://api.example.com\", method: \"GET\" }\n    }\n  }\n\nremoveNode - Remove node by name\n  Required: nodeName or nodeId\n  Example: {type: \"removeNode\", nodeName: \"Old Node\"}\n\nupdateNode - Update node properties\n  Required: nodeName, changes\n  Example: {type: \"updateNode\", nodeName: \"Webhook\", changes: {\"parameters.path\": \"/new-path\"}}\n\nmoveNode - Change node position\n  Required: nodeName, position\n  Example: {type: \"moveNode\", nodeName: \"Set\", position: [600, 400]}\n\nenableNode/disableNode - Toggle node status\n  Required: nodeName\n  Example: {type: \"disableNode\", nodeName: \"Debug\"}\n\naddConnection - Connect nodes\n  Required: source, target\n  Optional: sourceOutput (default: \"main\"), targetInput (default: \"main\"), \n           sourceIndex (default: 0), targetIndex (default: 0)\n  Example: {\n    type: \"addConnection\",\n    source: \"Webhook\",\n    target: \"Set\",\n    sourceOutput: \"main\",  // for nodes with multiple outputs\n    targetInput: \"main\"    // for nodes with multiple inputs\n  }\n\nremoveConnection - Disconnect nodes\n  Required: source, target\n  Optional: sourceOutput, targetInput\n  Example: {type: \"removeConnection\", source: \"Set\", target: \"HTTP Request\"}\n\nupdateSettings - Change workflow settings\n  Required: settings object\n  Example: {type: \"updateSettings\", settings: {executionOrder: \"v1\", timezone: \"Europe/Berlin\"}}\n\nupdateName - Rename workflow\n  Required: name\n  Example: {type: \"updateName\", name: \"New Workflow Name\"}\n\naddTag/removeTag - Manage tags\n  Required: tag\n  Example: {type: \"addTag\", tag: \"production\"}\n\nEXAMPLES:\n\nSimple update:\noperations: [\n  {type: \"updateName\", name: \"My Updated Workflow\"},\n  {type: \"disableNode\", nodeName: \"Debug Node\"}\n]\n\nComplex example - Add nodes and connect (any order works):\noperations: [\n  {type: \"addConnection\", source: \"Webhook\", target: \"Format Date\"},\n  {type: \"addNode\", node: {id: \"abc123\", name: \"Format Date\", type: \"n8n-nodes-base.dateTime\", typeVersion: 2, position: [400, 300], parameters: {}}},\n  {type: \"addConnection\", source: \"Format Date\", target: \"Logger\"},\n  {type: \"addNode\", node: {id: \"def456\", name: \"Logger\", type: \"n8n-nodes-base.n8n\", typeVersion: 1, position: [600, 300], parameters: {}}}\n]\n\nValidation example:\n{\n  id: \"workflow-id\",\n  operations: [{type: \"addNode\", node: {...}}],\n  validateOnly: true  // Test without applying\n}","inputSchema":{"type":"object","additionalProperties":true,"properties":{"id":{"type":"string","description":"Workflow ID to update"},"operations":{"type":"array","description":"Array of diff operations to apply. Each operation must have a \"type\" field and relevant properties for that operation type.","items":{"type":"object","additionalProperties":true}},"validateOnly":{"type":"boolean","description":"If true, only validate operations without applying them"}},"required":["id","operations"]}},{"name":"n8n_delete_workflow","description":"Permanently delete a workflow. This action cannot be undone.","inputSchema":{"type":"object","properties":{"id":{"type":"string","description":"Workflow ID to delete"}},"required":["id"]}},{"name":"n8n_list_workflows","description":"List workflows with optional filters. Supports pagination via cursor.","inputSchema":{"type":"object","properties":{"limit":{"type":"number","description":"Number of workflows to return (1-100, default: 100)"},"cursor":{"type":"string","description":"Pagination cursor from previous response"},"active":{"type":"boolean","description":"Filter by active status"},"tags":{"type":"array","items":{"type":"string"},"description":"Filter by tags (exact match)"},"projectId":{"type":"string","description":"Filter by project ID (enterprise feature)"},"excludePinnedData":{"type":"boolean","description":"Exclude pinned data from response (default: true)"}}}},{"name":"n8n_trigger_webhook_workflow","description":"Trigger a workflow via webhook. Workflow must be ACTIVE and have a Webhook trigger node. HTTP method must match webhook configuration.","inputSchema":{"type":"object","properties":{"webhookUrl":{"type":"string","description":"Full webhook URL from n8n workflow (e.g., https://n8n.example.com/webhook/abc-def-ghi)"},"httpMethod":{"type":"string","enum":["GET","POST","PUT","DELETE"],"description":"HTTP method (must match webhook configuration, often GET)"},"data":{"type":"object","description":"Data to send with the webhook request"},"headers":{"type":"object","description":"Additional HTTP headers"},"waitForResponse":{"type":"boolean","description":"Wait for workflow completion (default: true)"}},"required":["webhookUrl"]}},{"name":"n8n_get_execution","description":"Get details of a specific execution by ID.","inputSchema":{"type":"object","properties":{"id":{"type":"string","description":"Execution ID"},"includeData":{"type":"boolean","description":"Include full execution data (default: false)"}},"required":["id"]}},{"name":"n8n_list_executions","description":"List workflow executions with optional filters. Supports pagination.","inputSchema":{"type":"object","properties":{"limit":{"type":"number","description":"Number of executions to return (1-100, default: 100)"},"cursor":{"type":"string","description":"Pagination cursor from previous response"},"workflowId":{"type":"string","description":"Filter by workflow ID"},"projectId":{"type":"string","description":"Filter by project ID (enterprise feature)"},"status":{"type":"string","enum":["success","error","waiting"],"description":"Filter by execution status"},"includeData":{"type":"boolean","description":"Include execution data (default: false)"}}}},{"name":"n8n_delete_execution","description":"Delete execution record. Only removes history, not processed data.","inputSchema":{"type":"object","properties":{"id":{"type":"string","description":"Execution ID to delete"}},"required":["id"]}},{"name":"n8n_system","description":"n8n system operations. Check health, list tools, or diagnose issues. One tool for all system management.","inputSchema":{"type":"object","properties":{"operation":{"type":"string","enum":["health","list_tools","diagnose"],"description":"health=check connectivity, list_tools=show available tools, diagnose=troubleshoot issues.","default":"health"},"verbose":{"type":"boolean","description":"Include detailed debug info for diagnose operation.","default":false}}}},{"name":"n8n_validate_workflow","description":"Validate workflow from n8n instance by ID. Fetches workflow from n8n API and runs comprehensive validation using existing WorkflowValidator.","inputSchema":{"type":"object","properties":{"id":{"type":"string","description":"Workflow ID to validate from n8n instance"},"mode":{"type":"string","enum":["quick","full","structure","connections","expressions","nodes"],"description":"Validation mode. Default \"full\" for complete validation.","default":"full"},"options":{"type":"object","description":"Optional validation settings","properties":{"validateNodes":{"type":"boolean"},"validateConnections":{"type":"boolean"},"validateExpressions":{"type":"boolean"},"profile":{"type":"string","enum":["minimal","runtime","ai-friendly","strict"],"default":"runtime"}}}},"required":["id"]}}]},"id":1}